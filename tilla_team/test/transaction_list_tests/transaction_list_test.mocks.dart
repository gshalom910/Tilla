// Mocks generated by Mockito 5.2.0 from annotations
// in tilla_team/test/transaction_list_tests/transaction_list_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:tilla_team/services/transaction_service.dart/repo/transaction_repo.dart'
    as _i3;
import 'package:tilla_team/services/transaction_service.dart/transaction_api.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeTransactionApi_0 extends _i1.Fake implements _i2.TransactionApi {}

/// A class which mocks [TransactionRepo].
///
/// See the documentation for Mockito's code generation for more information.
class MockTransactionRepo extends _i1.Mock implements _i3.TransactionRepo {
  MockTransactionRepo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TransactionApi get transactionApi =>
      (super.noSuchMethod(Invocation.getter(#transactionApi),
          returnValue: _FakeTransactionApi_0()) as _i2.TransactionApi);
  @override
  set transactionApi(_i2.TransactionApi? _transactionApi) =>
      super.noSuchMethod(Invocation.setter(#transactionApi, _transactionApi),
          returnValueForMissingStub: null);
  @override
  _i4.Future<String> addTransaction(
          String? date,
          String? accountID,
          String? type,
          double? amount,
          String? description,
          String? categoryID) =>
      (super.noSuchMethod(
          Invocation.method(#addTransaction,
              [date, accountID, type, amount, description, categoryID]),
          returnValue: Future<String>.value('')) as _i4.Future<String>);
  @override
  _i4.Future<List<dynamic>> getAllTransactions() =>
      (super.noSuchMethod(Invocation.method(#getAllTransactions, []),
              returnValue: Future<List<dynamic>>.value(<dynamic>[]))
          as _i4.Future<List<dynamic>>);
}
